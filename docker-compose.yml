version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: challenge-postgres
    environment:
      POSTGRES_DB: challenge_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - challenge-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: challenge-api
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/challenge_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_CACHE_TYPE: caffeine
      SPRING_CACHE_CAFFEINE_SPEC: maximumSize=100,expireAfterWrite=30m
    networks:
      - challenge-network
    restart: unless-stopped

networks:
  challenge-network:
    driver: bridge

volumes:
  postgres_data: